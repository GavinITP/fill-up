apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
data:
  POSTGRES_HOST: "pg-user"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_DB: "user-postgres"
  POSTGRES_PORT: "5433"
  JWT_SECRET: "SOME_SECRET"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  labels:
    app: fillup
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fillup
      tier: backend
  template:
    metadata:
      name: user-service-pod
      labels:
        app: fillup
        tier: backend
    spec:
      initContainers:
      - name: init-db
        image: postgres:17
        envFrom:
        - configMapRef:
            name: user-service-config
        command: 
        - /bin/sh
        - -c
        - |
          # Run the SQL commands to create the required resources
          PGPASSWORD=${POSTGRES_PASSWORD} psql -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -d ${POSTGRES_DB} <<'EOSQL'
            -- First create the extension
            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

            -- Create the enum type (it will fail silently if it already exists)
            CREATE TYPE usertype_enum AS ENUM ('USER', 'OWNER', 'ADMIN');
            ALTER TYPE usertype_enum OWNER TO postgres;

            -- Create USER_TABLE if it doesn't exist
            CREATE TABLE IF NOT EXISTS USER_TABLE (
                user_id CHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
                name VARCHAR(100) NOT NULL,
                email VARCHAR(200) UNIQUE NOT NULL,
                password VARCHAR(500) NOT NULL,
                user_type usertype_enum NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );

            -- Create OWNER table if it doesn't exist
            CREATE TABLE IF NOT EXISTS OWNER (
                owner_id CHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
                is_verified BOOLEAN NOT NULL DEFAULT FALSE,
                identity_card_number VARCHAR(30) NOT NULL,
                tel VARCHAR(30) NOT NULL,
                FOREIGN KEY (owner_id) REFERENCES USER_TABLE(user_id),
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
          EOSQL
      containers:
        - name: user-service
          image: punnyoz/fillup-user-service:latest
          ports:
            - containerPort: 5002
          envFrom:
          - configMapRef:
              name: user-service-config
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: fillup
    tier: backend
  ports:
    - name: user-service
      port: 5002
      targetPort: 5002